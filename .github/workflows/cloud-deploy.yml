# Build docker image and deploy to google cloud run
name: cloud_deploy

on:
  push:
    branches:
      - feat/deploy-gh-action
env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT }}
  SERVICE: opencdms-components-api
  REGION: europe-west1
  IMAGE_NAME: gcr.io/${{ secrets.GCP_PROJECT }}/opencdms-components-api

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: idems/opencdms-components-api

      # authenticate to google cloud
      # https://github.com/google-github-actions/auth#authenticating-via-service-account-key-json

      - id: "auth"
        uses: "google-github-actions/auth@v0"
        with:
          credentials_json: ${{secrets.GCP_SA_KEY_B64}}
          token_format: "access_token"

      # - name: Setup Cloud SDK
      #   uses: google-github-actions/setup-gcloud@v0
      #   # with:
      #   #   project_id: ${{ env.PROJECT_ID }}
      #   #   service_account_key: ${{ secrets.GCP_SA_KEY_B64 }}
      #   #   export_default_credentials: true  # Set to true to authenticate the Cloud Run action
      # - name: Authorize Docker push
      #   run: gcloud auth configure-docker
      # Authenticate to google cloud
      # https://github.com/google-github-actions/auth#authenticating-via-service-account-key-json
      # https://github.com/docker/login-action#service-account-based-authentication
      - name: Login to GCR
        uses: docker/login-action@v1
        with:
          registry: gcr.io
          username: "oauth2accesstoken"
          password: "${{ steps.auth.outputs.access_token }}"

        # This example runs "docker login" directly to Container Registry.
      - run: |
          echo '${{ steps.auth.outputs.access_token }}' | docker login -u oauth2accesstoken --password-stdin https://gcr.io

      - name: Build
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{env.IMAGE_NAME}}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha, scope=${{ github.workflow }}
          cache-to: type=gha, scope=${{ github.workflow }}, mode=max

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v0
        with:
          service: ${{ env.SERVICE }}
          image: ${{ env.IMAGE_NAME }}
          region: ${{ env.REGION }}
